# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-01-24 13:55
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('personal_data', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Callback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.CharField(choices=[('Новый', 'Новый'), ('Проконсультированный', 'Проконсультированный')], default='Новый', max_length=20, verbose_name='Статус обратного вызова')),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personal_data.Consumer', verbose_name='Заказчик')),
            ],
            options={
                'verbose_name': 'Обратный вызов',
                'verbose_name_plural': 'Обратные вызовы',
                'db_table': 'user_callbacks',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('price_will_be_counted', models.BooleanField(default=True, help_text='При отключение, цена не будет расчитываться.', verbose_name='Автоматически рассчитывать цену?')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Влияет на цену. Скидка - процентное значение.', max_digits=5, null=True, verbose_name='Скидка')),
                ('order_price', models.DecimalField(blank=True, decimal_places=2, help_text='Если включена галочка автоматического расчёта цены, то цена, которую вы установите будет замененна на рассчитанную.<br/>Обновляется после сохранения.', max_digits=14, null=True, verbose_name='Цена заказа')),
                ('status', models.CharField(choices=[('Новый', 'Новый'), ('В процессе', 'В процессе'), ('Успешно завершён', 'Успешно завершён'), ('Архивирован', 'Архивирован')], default='Новый', help_text='При смене статуса на "В процессе" или на "Успешно завершён" заказчику отправляется сообщение указанное в "Настройках".', max_length=20, verbose_name='Статус вопроса')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='Идентификатор')),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personal_data.Consumer', verbose_name='Заказчик')),
                ('ordered_products', models.ManyToManyField(related_name='products_of_order', to='personal_data.OrderedProduct', verbose_name='Заказанные предметы')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'db_table': 'user_orders',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('question', models.TextField(max_length=1024, verbose_name='Вопрос')),
                ('answer_subject', models.TextField(blank=True, help_text='<div class="variablesHint">Доступные переменные:<br/><br/><span class="variable">{{first_name}}</span> &mdash; <span class="helpText">Иван</span><br/><span class="variable">{{last_name}}</span> &mdash; <span class="helpText">Иванович</span><br/><span class="variable">{{middle_name}}</span> &mdash; <span class="helpText">Иванов</span><br/><span class="variable">{{full_name}}</span> &mdash; <span class="helpText">Иван Иванович</span><br/><span class="variable">{{status}}</span> &mdash; <span class="helpText">Зарегистрированный "А"/Новый</span><br/><span class="variable">{{site}}</span> &mdash; <span class="helpText">cosmeticsyou.ru.</span><br/> <span class="variable">{{consultant_num}}</span> &mdash; <span class="helpText">123456789</span><br/><span class="variable">{{refferal_ur}}</span> &mdash; <span class="helpText">cosmeticsyou.ru/registration/123456789</span><br/><span class="variable">{{url_to_personal_room}}</span> &mdash; <span class="helpText">pcosmeticsyou.ru/personal_room/123456789</span><br/></div>', max_length=150, null=True, verbose_name='Тема email сообщения')),
                ('answer', models.TextField(blank=True, help_text='<div class="variablesHint">Доступные переменные:<br/><br/><span class="variable">{{first_name}}</span> &mdash; <span class="helpText">Иван</span><br/><span class="variable">{{last_name}}</span> &mdash; <span class="helpText">Иванович</span><br/><span class="variable">{{middle_name}}</span> &mdash; <span class="helpText">Иванов</span><br/><span class="variable">{{full_name}}</span> &mdash; <span class="helpText">Иван Иванович</span><br/><span class="variable">{{status}}</span> &mdash; <span class="helpText">Зарегистрированный "А"/Новый</span><br/><span class="variable">{{site}}</span> &mdash; <span class="helpText">cosmeticsyou.ru.</span><br/><div>', max_length=1000, null=True, verbose_name='Ответ на вопрос')),
                ('status', models.CharField(choices=[('Генерируется', 'Генерируется'), ('Сгенерирован', 'Сгенерирован')], default='Генерируется', help_text='При смене статуса на "Сгенерирован", ответ отправляется на email задавшего вопрос.', max_length=20, verbose_name='Статус вопроса')),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personal_data.Consumer', verbose_name='Заказчик')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
                'db_table': 'user_questions',
            },
        ),
    ]
