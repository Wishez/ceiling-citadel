# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-01-24 13:55
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        ('home', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('last_name', models.CharField(max_length=36, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=32, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Отчество')),
                ('phone_number', models.CharField(max_length=26, verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=150, verbose_name='Email')),
                ('requisites', models.CharField(max_length=100, verbose_name='Реквизиты')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='Идентификатор')),
            ],
            options={
                'verbose_name': 'Консультант',
                'verbose_name_plural': 'Консультанты',
                'db_table': 'site_consumers',
            },
        ),
        migrations.CreateModel(
            name='OrderedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Цена за штуку')),
                ('currency', models.CharField(blank=True, choices=[('₽', '₽'), ('€', '€'), ('$', '$')], default='₽', max_length=20, null=True, verbose_name='Валюта')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='Идентификатор')),
                ('width', models.CharField(blank=True, help_text='Пример: От 10 мм до 250 мм', max_length=100, null=True, verbose_name='Ширина')),
                ('height', models.CharField(blank=True, help_text='Пример: 8мм', max_length=100, null=True, verbose_name='Высота')),
                ('length', models.CharField(blank=True, help_text='Пример: от 1м до 10м', max_length=100, null=True, verbose_name='Длина')),
                ('thickness', models.CharField(blank=True, help_text='Пример: от 1 мм до 1,5 мм', max_length=100, null=True, verbose_name='Толщина')),
                ('quantity', models.IntegerField(default=1, verbose_name='Количество продукта')),
                ('full_price', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=12, null=True, verbose_name='Общая цена')),
                ('acoustics', models.ManyToManyField(blank=True, to='home.Acoustics', verbose_name='Акустика')),
                ('colors', models.ManyToManyField(blank=True, to='home.Color', verbose_name='Цвета')),
                ('combustibility', models.ManyToManyField(blank=True, to='home.Combustibility', verbose_name='Горючесть')),
                ('edges', models.ManyToManyField(blank=True, to='home.Edge', verbose_name='Кромки')),
                ('lightning', models.ManyToManyField(blank=True, to='home.Lightning', verbose_name='Освящение')),
                ('material', models.ManyToManyField(blank=True, to='home.Material', verbose_name='Материал')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_product', to='catalog.Product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Консультант',
                'verbose_name_plural': 'Консультанты',
                'db_table': 'consumers_ordered_products',
            },
        ),
    ]
