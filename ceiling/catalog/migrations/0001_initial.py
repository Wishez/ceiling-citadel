# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-01-24 13:55
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('home', '0001_initial'),
        ('album', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Описание')),
                ('slogan', models.CharField(blank=True, help_text="Краткое описание особенностей. К примеру, Наименование: 'Алюминий', Слоган: '13-й элемент таблицы менделеева'", max_length=150, null=True, verbose_name='Слоган')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='Идентификатор')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
                'db_table': 'brands_of_catalog',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Описание')),
                ('slogan', models.CharField(blank=True, help_text="Краткое описание особенностей. К примеру, Наименование: 'Алюминий', Слоган: '13-й элемент таблицы менделеева'", max_length=150, null=True, verbose_name='Слоган')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='Идентификатор')),
                ('brands', models.ManyToManyField(help_text='Выбирете бренды, которые будут отображаться в выбранной пользователем категории.', related_name='categories_of_brand', to='catalog.Brand', verbose_name='Категории бренда')),
                ('preview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='album.AlbumImage', verbose_name='Обложка/Превью')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'categories_of_catalog',
            },
        ),
        migrations.CreateModel(
            name='CategorySection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('section_name', models.CharField(max_length=150, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Секция категории',
                'verbose_name_plural': 'Секции категории',
                'db_table': 'section_of_category',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Описание')),
                ('slogan', models.CharField(blank=True, help_text="Краткое описание особенностей. К примеру, Наименование: 'Алюминий', Слоган: '13-й элемент таблицы менделеева'", max_length=150, null=True, verbose_name='Слоган')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='Идентификатор')),
                ('brand', models.ForeignKey(blank=True, help_text='Выбирете бренд, который относится к этой коллекции. Она может быть независимой.', on_delete=django.db.models.deletion.CASCADE, related_name='brand_of_collection', to='catalog.Brand', verbose_name='Бренд коллекции')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'collections_of_brand',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Цена за штуку')),
                ('currency', models.CharField(blank=True, choices=[('₽', '₽'), ('€', '€'), ('$', '$')], default='₽', max_length=20, null=True, verbose_name='Валюта')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='Идентификатор')),
                ('width', models.CharField(blank=True, help_text='Пример: От 10 мм до 250 мм', max_length=100, null=True, verbose_name='Ширина')),
                ('height', models.CharField(blank=True, help_text='Пример: 8мм', max_length=100, null=True, verbose_name='Высота')),
                ('length', models.CharField(blank=True, help_text='Пример: от 1м до 10м', max_length=100, null=True, verbose_name='Длина')),
                ('thickness', models.CharField(blank=True, help_text='Пример: от 1 мм до 1,5 мм', max_length=100, null=True, verbose_name='Толщина')),
                ('name', models.CharField(max_length=100, verbose_name='Наименование')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='Описание')),
                ('slogan', models.CharField(blank=True, help_text="Краткое описание особенностей. К примеру, Наименование: 'Алюминий', Слоган: '13-й элемент таблицы менделеева'", max_length=150, null=True, verbose_name='Слоган')),
                ('content', models.TextField(max_length=8164, verbose_name='Дополнительный контент')),
                ('acoustics', models.ManyToManyField(blank=True, to='home.Acoustics', verbose_name='Акустика')),
                ('album', models.ForeignKey(help_text='Альбом для слайдов.', on_delete=django.db.models.deletion.CASCADE, to='album.Album', verbose_name='Изображения визуализирующая продукт')),
                ('colors', models.ManyToManyField(blank=True, to='home.Color', verbose_name='Цвета')),
                ('combustibility', models.ManyToManyField(blank=True, to='home.Combustibility', verbose_name='Горючесть')),
                ('edges', models.ManyToManyField(blank=True, to='home.Edge', verbose_name='Кромки')),
                ('lightning', models.ManyToManyField(blank=True, to='home.Lightning', verbose_name='Освящение')),
                ('material', models.ManyToManyField(blank=True, to='home.Material', verbose_name='Материал')),
                ('preview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='album.AlbumImage', verbose_name='Обложка/Превью')),
                ('visualisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_visualisation', to='album.AlbumImage', verbose_name='Изображение визуализирующая продукт')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукт',
                'db_table': 'collection_products',
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='collection_items',
            field=models.ManyToManyField(related_name='collection_items', to='catalog.Product', verbose_name='Предметы коллекции'),
        ),
        migrations.AddField(
            model_name='collection',
            name='preview',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='album.AlbumImage', verbose_name='Обложка/Превью'),
        ),
        migrations.AddField(
            model_name='category',
            name='section',
            field=models.ForeignKey(help_text='Принадлежность категории к одной из секций "Форма", "Системы", "Освящение" и т.п.', on_delete=django.db.models.deletion.CASCADE, related_name='group_of_category', to='catalog.CategorySection', verbose_name='Секция'),
        ),
        migrations.AddField(
            model_name='brand',
            name='categories',
            field=models.ManyToManyField(help_text='Выбирете категории, которые будут отображаться в выбранном пользователем бренде.', related_name='categories_of_brand', to='catalog.Category', verbose_name='Категории бренда'),
        ),
        migrations.AddField(
            model_name='brand',
            name='collections',
            field=models.ManyToManyField(help_text='Выбирете категории, которые будут отображаться в выбранном пользователем бренде.', related_name='categories_of_brand', to='catalog.Collection', verbose_name='Категории бренда'),
        ),
        migrations.AddField(
            model_name='brand',
            name='preview',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='album.AlbumImage', verbose_name='Обложка/Превью'),
        ),
    ]
